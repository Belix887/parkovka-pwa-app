"use client";
import { useState } from "react";
import { useToast } from "@/components/ui/ToastProvider";
import { MotionCard, CardHeader, CardContent, CardFooter } from "@/components/ui/MotionCard";
import { Button } from "@/components/ui/Button";
import { Input } from "@/components/ui/Input";
import { Badge } from "@/components/ui/Badge";
import { MobileNavigation } from "@/components/ui/MobileNavigation";
import { useRouter } from "next/navigation";

export default function CreateSpotPage() {
  const [photos, setPhotos] = useState<string[]>([]);
  const [loading, setLoading] = useState(false);
  const { showSuccess, showError, showInfo } = useToast();
  const router = useRouter();

  async function handleFilePick(e: React.ChangeEvent<HTMLInputElement>) {
    const file = e.target.files?.[0];
    if (!file) return;
    if (photos.length >= 10) {
      showError("–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç", "–ú–∞–∫—Å–∏–º—É–º 10 —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π");
      return;
    }
    try {
      const res = await fetch("/api/uploads/sign", { method: "POST" });
      const data = await res.json();
      if (data.signedUrl) {
        await fetch(data.signedUrl, { method: data.method || 'PUT', headers: data.headers || {}, body: file });
        setPhotos((p) => [...p, data.publicUrl]);
        showInfo("–§–æ—Ç–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ", "–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞");
      } else if (data.publicUrl) {
        setPhotos((p) => [...p, data.publicUrl]);
        showInfo("–§–æ—Ç–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ", "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä");
      } else {
        throw new Error("no url");
      }
    } catch (err) {
      showError("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏", "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ");
    } finally {
      e.currentTarget.value = "";
    }
  }

  async function onSubmit(e: React.FormEvent<HTMLFormElement>) {
    e.preventDefault();
    const form = new FormData(e.currentTarget);
    const body = Object.fromEntries(form.entries());
    const payload = {
      title: String(body.title),
      description: String(body.description),
      pricePerHour: Number(body.pricePerHour),
      sizeL: Number(body.sizeL),
      sizeW: Number(body.sizeW),
      sizeH: Number(body.sizeH),
      covered: Boolean(body.covered),
      guarded: Boolean(body.guarded),
      camera: Boolean(body.camera),
      evCharging: Boolean(body.evCharging),
      disabledAccessible: Boolean(body.disabledAccessible),
      wideEntrance: Boolean(body.wideEntrance),
      accessType: String(body.accessType),
      rules: String(body.rules),
      address: String(body.address),
      geoLat: Number(body.geoLat),
      geoLng: Number(body.geoLng),
      photos,
    };
    
    setLoading(true);
    try {
      const r = await fetch("/api/spots", { method: "POST", body: JSON.stringify(payload), headers: { "Content-Type": "application/json" } });
      if (r.ok) {
        showSuccess("–ú–µ—Å—Ç–æ —Å–æ–∑–¥–∞–Ω–æ", "–í–∞—à–µ –º–µ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é");
        (e.currentTarget as HTMLFormElement).reset();
        setPhotos([]);
        router.push("/profile");
      } else {
        const errorData = await r.json();
        showError("–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è", errorData.error || "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –º–µ—Å—Ç–æ");
      }
    } catch (err) {
      showError("–û—à–∏–±–∫–∞ —Å–µ—Ç–∏", "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É");
    } finally {
      setLoading(false);
    }
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-[var(--bg-primary)] via-[var(--bg-secondary)] to-[var(--bg-tertiary)]">
      {/* –ú–æ–±–∏–ª—å–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è */}
      <MobileNavigation />
      
      {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç —Å –æ—Ç—Å—Ç—É–ø–æ–º –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–π —à–∞–ø–∫–∏ */}
      <div className="pt-16 md:pt-0">
        <div className="container py-6 md:py-12">
          <div className="text-center mb-8 md:mb-12">
            <h1 className="text-3xl md:text-5xl font-bold text-[var(--text-primary)] mb-4">
              –°–æ–∑–¥–∞—Ç—å –ø–∞—Ä–∫–æ–≤–æ—á–Ω–æ–µ –º–µ—Å—Ç–æ
            </h1>
            <p className="text-[var(--text-secondary)] text-base md:text-lg max-w-2xl mx-auto">
              –î–æ–±–∞–≤—å—Ç–µ —Å–≤–æ–µ –ø–∞—Ä–∫–æ–≤–æ—á–Ω–æ–µ –º–µ—Å—Ç–æ –∏ –Ω–∞—á–Ω–∏—Ç–µ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –∞—Ä–µ–Ω–¥–µ
            </p>
          </div>

          <form onSubmit={onSubmit} className="space-y-6 md:space-y-8">
            {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
            <MotionCard className="mobile-card">
              <CardHeader 
                title="–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è" 
                subtitle="–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –±–∞–∑–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –æ –ø–∞—Ä–∫–æ–≤–æ—á–Ω–æ–º –º–µ—Å—Ç–µ"
                icon="üìù"
              />
              <CardContent>
                <div className="space-y-4 md:space-y-6 mobile-form">
                  <Input
                    name="title"
                    label="–ù–∞–∑–≤–∞–Ω–∏–µ –º–µ—Å—Ç–∞"
                    placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –£–¥–æ–±–Ω–∞—è –ø–∞—Ä–∫–æ–≤–∫–∞ –≤ —Ü–µ–Ω—Ç—Ä–µ"
                    required
                  />
                  
                  <div>
                    <label className="block text-sm font-medium text-[var(--text-primary)] mb-2">
                      –û–ø–∏—Å–∞–Ω–∏–µ
                    </label>
                    <textarea 
                      name="description" 
                      placeholder="–û–ø–∏—à–∏—Ç–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –≤–∞—à–µ–≥–æ –ø–∞—Ä–∫–æ–≤–æ—á–Ω–æ–≥–æ –º–µ—Å—Ç–∞..."
                      className="w-full px-4 py-3 bg-[var(--bg-surface)] border border-[var(--border-primary)] rounded-xl text-[var(--text-primary)] placeholder-[var(--text-muted)] focus:outline-none focus:ring-2 focus:ring-[var(--accent-primary)] focus:border-transparent transition-all duration-300 mobile-form"
                      rows={4}
                      required 
                    />
                  </div>

                  <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <Input
                      name="pricePerHour"
                      label="–¶–µ–Ω–∞ –∑–∞ —á–∞—Å (–∫–æ–ø–µ–π–∫–∏)"
                      type="number"
                      placeholder="10000"
                      required
                    />
                    <div>
                      <label className="block text-sm font-medium text-[var(--text-primary)] mb-2">
                        –¢–∏–ø –¥–æ—Å—Ç—É–ø–∞
                      </label>
                      <select 
                        name="accessType" 
                        className="w-full px-4 py-3 bg-[var(--bg-surface)] border border-[var(--border-primary)] rounded-xl text-[var(--text-primary)] focus:outline-none focus:ring-2 focus:ring-[var(--accent-primary)] focus:border-transparent transition-all duration-300 mobile-form"
                      >
                        <option value="PRIVATE_GATE">–ó–∞–∫—Ä—ã—Ç–∞—è —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—è</option>
                        <option value="STREET">–£–ª–∏—Ü–∞</option>
                        <option value="GARAGE">–ì–∞—Ä–∞–∂</option>
                        <option value="YARD">–î–≤–æ—Ä</option>
                        <option value="OTHER">–î—Ä—É–≥–æ–µ</option>
                      </select>
                    </div>
                  </div>

                  <div className="grid grid-cols-3 gap-3 md:gap-4">
                    <Input
                      name="sizeL"
                      label="–î–ª–∏–Ω–∞ (–º)"
                      type="number"
                      step="0.1"
                      placeholder="5.0"
                      required
                    />
                    <Input
                      name="sizeW"
                      label="–®–∏—Ä–∏–Ω–∞ (–º)"
                      type="number"
                      step="0.1"
                      placeholder="2.5"
                      required
                    />
                    <Input
                      name="sizeH"
                      label="–í—ã—Å–æ—Ç–∞ (–º)"
                      type="number"
                      step="0.1"
                      placeholder="2.2"
                      required
                    />
                  </div>

                  <div>
                    <label className="block text-sm font-medium text-[var(--text-primary)] mb-2">
                      –ê–¥—Ä–µ—Å
                    </label>
                    <input 
                      name="address" 
                      placeholder="–£–∫–∞–∂–∏—Ç–µ —Ç–æ—á–Ω—ã–π –∞–¥—Ä–µ—Å"
                      className="w-full px-4 py-3 bg-[var(--bg-surface)] border border-[var(--border-primary)] rounded-xl text-[var(--text-primary)] placeholder-[var(--text-muted)] focus:outline-none focus:ring-2 focus:ring-[var(--accent-primary)] focus:border-transparent transition-all duration-300 mobile-form"
                    />
                  </div>

                  <div className="grid grid-cols-2 gap-4">
                    <Input
                      name="geoLat"
                      label="–®–∏—Ä–æ—Ç–∞"
                      type="number"
                      step="any"
                      placeholder="55.7558"
                    />
                    <Input
                      name="geoLng"
                      label="–î–æ–ª–≥–æ—Ç–∞"
                      type="number"
                      step="any"
                      placeholder="37.6176"
                    />
                  </div>
                </div>
              </CardContent>
            </MotionCard>

            {/* –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ */}
            <MotionCard className="mobile-card">
              <CardHeader 
                title="–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –º–µ—Å—Ç–∞" 
                subtitle="–û—Ç–º–µ—Ç—å—Ç–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ —É–¥–æ–±—Å—Ç–≤–∞"
                icon="‚ú®"
              />
              <CardContent>
                <div className="grid grid-cols-2 gap-3 md:gap-4">
                  {[
                    { name: "covered", label: "–ö—Ä—ã—Ç–æ–µ", icon: "üè†" },
                    { name: "guarded", label: "–ü–æ–¥ –æ—Ö—Ä–∞–Ω–æ–π", icon: "üõ°Ô∏è" },
                    { name: "camera", label: "–í–∏–¥–µ–æ–Ω–∞–±–ª—é–¥–µ–Ω–∏–µ", icon: "üìπ" },
                    { name: "evCharging", label: "EV –∑–∞—Ä—è–¥–∫–∞", icon: "üîå" },
                    { name: "disabledAccessible", label: "–î–ª—è –∏–Ω–≤–∞–ª–∏–¥–æ–≤", icon: "‚ôø" },
                    { name: "wideEntrance", label: "–®–∏—Ä–æ–∫–∏–π –≤—ä–µ–∑–¥", icon: "üöó" }
                  ].map(({ name, label, icon }) => (
                    <label key={name} className="flex items-center gap-3 p-3 rounded-xl bg-[var(--bg-tertiary)] hover:bg-[var(--bg-card)] transition-colors duration-300 cursor-pointer">
                      <input 
                        type="checkbox" 
                        name={name} 
                        className="w-4 h-4 text-[var(--accent-primary)] bg-[var(--bg-surface)] border-[var(--border-primary)] rounded focus:ring-[var(--accent-primary)] focus:ring-2"
                      />
                      <span className="text-lg">{icon}</span>
                      <span className="text-[var(--text-primary)] font-medium text-sm md:text-base">{label}</span>
                    </label>
                  ))}
                </div>
              </CardContent>
            </MotionCard>

            {/* –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ */}
            <MotionCard className="mobile-card">
              <CardHeader 
                title="–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏" 
                subtitle="–î–æ–±–∞–≤—å—Ç–µ –¥–æ 10 —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –º–µ—Å—Ç–∞"
                icon="üì∏"
              />
              <CardContent>
                <div className="space-y-4">
                  <div className="grid grid-cols-2 md:grid-cols-3 gap-3">
                    {photos.map((photo, i) => (
                      <div key={i} className="relative group">
                        <img 
                          src={photo} 
                          alt={`–§–æ—Ç–æ ${i + 1}`} 
                          className="w-full h-20 md:h-24 object-cover rounded-xl"
                        />
                        <button
                          type="button"
                          onClick={() => setPhotos(photos.filter((_, idx) => idx !== i))}
                          className="absolute -top-2 -right-2 w-6 h-6 bg-[var(--accent-error)] text-white rounded-full flex items-center justify-center text-sm opacity-0 group-hover:opacity-100 transition-opacity duration-300"
                        >
                          √ó
                        </button>
                      </div>
                    ))}
                  </div>
                  
                  <label className="block w-full">
                    <input type="file" accept="image/*" className="hidden" onChange={handleFilePick} />
                    <Button type="button" variant="outline" icon="üì∑" className="w-full mobile-btn">–î–æ–±–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ ({photos.length}/10)</Button>
                  </label>
                </div>
              </CardContent>
            </MotionCard>

            {/* –ü—Ä–∞–≤–∏–ª–∞ */}
            <MotionCard className="mobile-card">
              <CardHeader 
                title="–ü—Ä–∞–≤–∏–ª–∞ –∏ —É—Å–ª–æ–≤–∏—è" 
                subtitle="–£–∫–∞–∂–∏—Ç–µ –æ—Å–æ–±—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –∞—Ä–µ–Ω–¥–∞—Ç–æ—Ä–∞–º"
                icon="üìã"
              />
              <CardContent>
                <div>
                  <label className="block text-sm font-medium text-[var(--text-primary)] mb-2">
                    –ü—Ä–∞–≤–∏–ª–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
                  </label>
                  <textarea 
                    name="rules" 
                    placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ù–µ –∫—É—Ä–∏—Ç—å, —Å–æ–±–ª—é–¥–∞—Ç—å —Ç–∏—à–∏–Ω—É –ø–æ—Å–ª–µ 22:00..."
                    className="w-full px-4 py-3 bg-[var(--bg-surface)] border border-[var(--border-primary)] rounded-xl text-[var(--text-primary)] placeholder-[var(--text-muted)] focus:outline-none focus:ring-2 focus:ring-[var(--accent-primary)] focus:border-transparent transition-all duration-300 mobile-form"
                    rows={3}
                  />
                </div>
              </CardContent>
            </MotionCard>

            {/* –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ */}
            <MotionCard className="mobile-card">
              <CardContent>
                <Button
                  type="submit"
                  loading={loading}
                  size="lg"
                  className="w-full mobile-btn"
                  icon="üöÄ"
                >
                  {loading ? "–°–æ–∑–¥–∞–Ω–∏–µ..." : "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é"}
                </Button>
                <p className="text-center text-sm text-[var(--text-muted)] mt-4">
                  –ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –º–µ—Å—Ç–æ –±—É–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤
                </p>
              </CardContent>
            </MotionCard>
          </form>
        </div>
      </div>
    </div>
  );
}


