"use client";
import { useState } from "react";
import { useRouter } from "next/navigation";
import { useToast } from "@/components/ui/ToastProvider";
import { MotionCard, CardHeader, CardContent } from "@/components/ui/MotionCard";
import { Button } from "@/components/ui/Button";
import { Input } from "@/components/ui/Input";
import Link from "next/link";

export default function LoginPage() {
  const [loading, setLoading] = useState(false);
  const { showSuccess, showError } = useToast();
  const router = useRouter();

  async function onSubmit(e: React.FormEvent<HTMLFormElement>) {
    e.preventDefault();
    const form = new FormData(e.currentTarget);
    const payload = Object.fromEntries(form.entries());
    setLoading(true);
    
    try {
      const res = await fetch("/api/auth/login", { 
        method: "POST", 
        headers: { "Content-Type": "application/json" }, 
        body: JSON.stringify(payload) 
      });
      
      if (res.ok) {
        showSuccess("–í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω", "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!");
        router.push("/profile");
      } else {
        const errorData = await res.json();
        showError("–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞", errorData.error || "–ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ");
      }
    } catch (err: any) {
      showError("–û—à–∏–±–∫–∞ —Å–µ—Ç–∏", "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É");
    } finally {
      setLoading(false);
    }
  }

  return (
    <div className="min-h-screen flex items-center justify-center py-12">
      <div className="container max-w-md">
        <MotionCard className="w-full">
          <CardHeader 
            title="–í—Ö–æ–¥ –≤ –∞–∫–∫–∞—É–Ω—Ç" 
            subtitle="–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞"
            icon="üîê"
          />
          <CardContent>
            <form onSubmit={onSubmit} className="space-y-6">
              <Input
                name="email"
                label="Email"
                type="email"
                placeholder="your@email.com"
                icon="üìß"
                required
              />
              
              <Input
                name="password"
                label="–ü–∞—Ä–æ–ª—å"
                type="password"
                placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å"
                icon="üîí"
                required
              />

              <div className="flex items-center justify-between">
                <label className="flex items-center gap-2 text-sm text-[var(--text-secondary)]">
                  <input 
                    type="checkbox" 
                    className="w-4 h-4 text-[var(--accent-primary)] bg-[var(--bg-surface)] border-[var(--border-primary)] rounded focus:ring-[var(--accent-primary)] focus:ring-2"
                  />
                  –ó–∞–ø–æ–º–Ω–∏—Ç—å –º–µ–Ω—è
                </label>
                <Link 
                  href="/forgot" 
                  className="text-sm text-[var(--accent-primary)] hover:text-[var(--accent-primary)] hover:opacity-80 transition-colors duration-300"
                >
                  –ó–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å?
                </Link>
              </div>

              <Button
                type="submit"
                loading={loading}
                size="lg"
                className="w-full"
                icon="üöÄ"
              >
                {loading ? "–í—Ö–æ–¥..." : "–í–æ–π—Ç–∏"}
              </Button>
            </form>
          </CardContent>
          
          <div className="mt-6 pt-6 border-t border-[var(--border-primary)] text-center">
            <p className="text-[var(--text-secondary)] text-sm">
              –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞?{" "}
              <Link 
                href="/register" 
                className="text-[var(--accent-primary)] hover:text-[var(--accent-primary)] hover:opacity-80 transition-colors duration-300 font-medium"
              >
                –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
              </Link>
            </p>
          </div>
        </MotionCard>
      </div>
    </div>
  );
}


