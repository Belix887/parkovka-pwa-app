"use client";
import { useState } from "react";
import { useRouter } from "next/navigation";
import { useToast } from "@/components/ui/ToastProvider";
import { MotionCard, CardHeader, CardContent } from "@/components/ui/MotionCard";
import { Button } from "@/components/ui/Button";
import { Input } from "@/components/ui/Input";
import Link from "next/link";

export default function RegisterPage() {
  const [loading, setLoading] = useState(false);
  const [phone, setPhone] = useState("");
  const { showSuccess, showError } = useToast();
  const router = useRouter();

  async function onSubmit(e: React.FormEvent<HTMLFormElement>) {
    e.preventDefault();
    const formEl = e.currentTarget as HTMLFormElement;
    const form = new FormData(formEl);
    const payload = Object.fromEntries(form.entries());
    setLoading(true);
    
    try {
      const res = await fetch("/api/auth/register", { 
        method: "POST", 
        headers: { "Content-Type": "application/json" }, 
        body: JSON.stringify(payload) 
      });
      
      if (res.ok) {
        showSuccess("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞", "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–µ—Ä–≤–∏—Å –ø–∞—Ä–∫–æ–≤–æ–∫!");
        formEl.reset();
        setPhone("");
        router.push("/profile");
        return; // –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∏–∫–∞–∫–∏—Ö –æ—à–∏–±–æ–∫ –ø–æ—Å–ª–µ —É—Å–ø–µ—Ö–∞
      } else {
        const errorData = await res.json();
        console.log("Registration error response:", errorData);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é –æ—à–∏–±–∫—É –≤–∞–ª–∏–¥–∞—Ü–∏–∏
        if (errorData.details && Array.isArray(errorData.details)) {
          const validationErrors = errorData.details.map((err: any) => err.message).join(", ");
          showError("–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏", validationErrors);
        } else {
          showError("–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏", errorData.error || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞");
        }
      }
    } catch (err: any) {
      // –ù–µ –¥—É–±–ª–∏—Ä—É–µ–º —Ç–æ—Å—Ç—ã –ø—Ä–∏ —Ä–µ–¥–∫–∏—Ö —Å–±–æ—è—Ö —Å–µ—Ç–∏, –ø—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä—É–µ–º
      console.error("Register request failed", err);
    } finally {
      setLoading(false);
    }
  }

  function onPhoneChange(e: React.ChangeEvent<HTMLInputElement>) {
    let value = e.target.value;
    // If the very first character typed is 9, prepend 8 automatically
    if (/^\s*9/.test(value)) {
      value = "8" + value.trim();
    }
    setPhone(value);
  }

  return (
    <div className="min-h-screen flex items-center justify-center py-12">
      <div className="container max-w-md">
        <MotionCard className="w-full">
          <CardHeader 
            title="–°–æ–∑–¥–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç" 
            subtitle="–ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"
            icon="üë§"
          />
          <CardContent>
            <form onSubmit={onSubmit} className="space-y-6">
              <Input
                name="name"
                label="–ü–æ–ª–Ω–æ–µ –∏–º—è"
                placeholder="–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤"
                icon="üë§"
                required
              />
              
              <Input
                name="email"
                label="Email"
                type="email"
                placeholder="your@email.com"
                icon="üìß"
                required
              />
              
              <Input
                name="password"
                label="–ü–∞—Ä–æ–ª—å"
                type="password"
                placeholder="–ú–∏–Ω–∏–º—É–º 8 —Å–∏–º–≤–æ–ª–æ–≤"
                icon="üîí"
                helperText="–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 8 —Å–∏–º–≤–æ–ª–æ–≤"
                required
              />
              
              <Input
                name="phone"
                label="–¢–µ–ª–µ—Ñ–æ–Ω"
                placeholder="+7 (999) 123-45-67"
                icon="üì±"
                required
                value={phone}
                onChange={onPhoneChange}
              />

              <div className="flex items-start gap-3">
                <input 
                  type="checkbox" 
                  required
                  className="w-4 h-4 text-[var(--accent-primary)] bg-[var(--bg-surface)] border-[var(--border-primary)] rounded focus:ring-[var(--accent-primary)] focus:ring-2 mt-1"
                />
                <label className="text-sm text-[var(--text-secondary)]">
                  –Ø —Å–æ–≥–ª–∞—Å–µ–Ω —Å{" "}
                  <Link href="/terms" className="text-[var(--accent-primary)] hover:opacity-80 transition-colors duration-300">
                    —É—Å–ª–æ–≤–∏—è–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
                  </Link>{" "}
                  –∏{" "}
                  <Link href="/privacy" className="text-[var(--accent-primary)] hover:opacity-80 transition-colors duration-300">
                    –ø–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
                  </Link>
                </label>
              </div>

              <Button
                type="submit"
                loading={loading}
                size="lg"
                className="w-full"
                icon="üöÄ"
              >
                {loading ? "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è..." : "–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è"}
              </Button>
            </form>
          </CardContent>
          
          <div className="mt-6 pt-6 border-t border-[var(--border-primary)] text-center">
            <p className="text-[var(--text-secondary)] text-sm">
              –£–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç?{" "}
              <Link 
                href="/login" 
                className="text-[var(--accent-primary)] hover:text-[var(--accent-primary)] hover:opacity-80 transition-colors duration-300 font-medium"
              >
                –í–æ–π—Ç–∏
              </Link>
            </p>
          </div>
        </MotionCard>
      </div>
    </div>
  );
}


