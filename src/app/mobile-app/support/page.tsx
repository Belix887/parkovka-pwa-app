"use client";
import { useState } from "react";
import Link from "next/link";
import { useRouter } from "next/navigation";

interface SupportCategory {
  id: string;
  title: string;
  icon: string;
  description: string;
}

interface FAQItem {
  id: string;
  question: string;
  answer: string;
  category: string;
}

export default function MobileSupportPage() {
  const [activeTab, setActiveTab] = useState<"help" | "faq" | "contact" | "feedback">("help");
  const [selectedCategory, setSelectedCategory] = useState<string | null>(null);
  const [contactForm, setContactForm] = useState({
    name: "",
    email: "",
    subject: "",
    message: "",
    category: "general",
  });
  const [feedbackForm, setFeedbackForm] = useState({
    rating: 0,
    comment: "",
    suggestions: "",
  });
  const [loading, setLoading] = useState(false);
  const [submitted, setSubmitted] = useState(false);
  const router = useRouter();

  const supportCategories: SupportCategory[] = [
    {
      id: "booking",
      title: "–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ",
      icon: "üìÖ",
      description: "–ü–æ–º–æ—â—å —Å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º –ø–∞—Ä–∫–æ–≤–æ—á–Ω—ã—Ö –º–µ—Å—Ç",
    },
    {
      id: "payment",
      title: "–û–ø–ª–∞—Ç–∞",
      icon: "üí≥",
      description: "–í–æ–ø—Ä–æ—Å—ã –ø–æ –æ–ø–ª–∞—Ç–µ –∏ –≤–æ–∑–≤—Ä–∞—Ç—É —Å—Ä–µ–¥—Å—Ç–≤",
    },
    {
      id: "account",
      title: "–ê–∫–∫–∞—É–Ω—Ç",
      icon: "üë§",
      description: "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª–µ–º –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏",
    },
    {
      id: "technical",
      title: "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞",
      icon: "üîß",
      description: "–ü—Ä–æ–±–ª–µ–º—ã —Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º –∏ —Å–∞–π—Ç–æ–º",
    },
    {
      id: "safety",
      title: "–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å",
      icon: "üõ°Ô∏è",
      description: "–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö –∏ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å",
    },
    {
      id: "general",
      title: "–û–±—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã",
      icon: "‚ùì",
      description: "–î—Ä—É–≥–∏–µ –≤–æ–ø—Ä–æ—Å—ã –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è",
    },
  ];

  const faqItems: FAQItem[] = [
    {
      id: "1",
      question: "–ö–∞–∫ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –ø–∞—Ä–∫–æ–≤–æ—á–Ω–æ–µ –º–µ—Å—Ç–æ?",
      answer: "–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Å—Ç–æ –Ω–∞ –∫–∞—Ä—Ç–µ –∏–ª–∏ –≤ –∫–∞—Ç–∞–ª–æ–≥–µ, —É–∫–∞–∂–∏—Ç–µ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –æ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–µ –∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ.",
      category: "booking",
    },
    {
      id: "2",
      question: "–ú–æ–∂–Ω–æ –ª–∏ –æ—Ç–º–µ–Ω–∏—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ?",
      answer: "–î–∞, –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ —Ä–∞–∑–¥–µ–ª–µ '–ú–æ–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è'. –ü—Ä–∏ –æ—Ç–º–µ–Ω–µ –º–µ–Ω–µ–µ —á–µ–º –∑–∞ 2 —á–∞—Å–∞ –º–æ–∂–µ—Ç –≤–∑–∏–º–∞—Ç—å—Å—è —à—Ç—Ä–∞—Ñ.",
      category: "booking",
    },
    {
      id: "3",
      question: "–ö–∞–∫–∏–µ —Å–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã –¥–æ—Å—Ç—É–ø–Ω—ã?",
      answer: "–ú—ã –ø—Ä–∏–Ω–∏–º–∞–µ–º –∫–∞—Ä—Ç—ã Visa, MasterCard, –ú–ò–†, –∞ —Ç–∞–∫–∂–µ –ø–ª–∞—Ç–µ–∂–∏ —á–µ—Ä–µ–∑ Apple Pay –∏ Google Pay.",
      category: "payment",
    },
    {
      id: "4",
      question: "–ö–∞–∫ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å?",
      answer: "–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –ü—Ä–æ—Ñ–∏–ª—å ‚Üí –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí –ò–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å. –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—É—â–∏–π –ø–∞—Ä–æ–ª—å –∏ –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å.",
      category: "account",
    },
    {
      id: "5",
      question: "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, —á—Ç–æ –¥–µ–ª–∞—Ç—å?",
      answer: "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, –æ–±–Ω–æ–≤–∏—Ç—å –µ–≥–æ –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏ –∏–ª–∏ –æ—á–∏—Å—Ç–∏—Ç—å –∫—ç—à –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö.",
      category: "technical",
    },
    {
      id: "6",
      question: "–ë–µ–∑–æ–ø–∞—Å–Ω—ã –ª–∏ –º–æ–∏ –¥–∞–Ω–Ω—ã–µ?",
      answer: "–î–∞, –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –º–µ—Ç–æ–¥—ã —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è –∏ –Ω–µ –ø–µ—Ä–µ–¥–∞–µ–º –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º –±–µ–∑ —Å–æ–≥–ª–∞—Å–∏—è.",
      category: "safety",
    },
  ];

  const handleContactSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setLoading(true);

    try {
      // –ò–º–∏—Ç–∞—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
      setTimeout(() => {
        setLoading(false);
        setSubmitted(true);
        setContactForm({
          name: "",
          email: "",
          subject: "",
          message: "",
          category: "general",
        });
      }, 2000);
    } catch (error) {
      console.error("Error submitting contact form:", error);
      setLoading(false);
    }
  };

  const handleFeedbackSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setLoading(true);

    try {
      // –ò–º–∏—Ç–∞—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–∑—ã–≤–∞
      setTimeout(() => {
        setLoading(false);
        setSubmitted(true);
        setFeedbackForm({
          rating: 0,
          comment: "",
          suggestions: "",
        });
      }, 2000);
    } catch (error) {
      console.error("Error submitting feedback:", error);
      setLoading(false);
    }
  };

  const filteredFAQ = selectedCategory 
    ? faqItems.filter(item => item.category === selectedCategory)
    : faqItems;

  return (
    <div className="mobile-support-page">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="support-header">
        <div className="header-top">
          <Link href="/mobile-app/profile" className="back-button">
            <span className="back-icon">‚Üê</span>
          </Link>
          <h1 className="page-title">–ü–æ–¥–¥–µ—Ä–∂–∫–∞</h1>
          <div className="header-spacer"></div>
        </div>
      </div>

      {/* –¢–∞–±—ã */}
      <div className="support-tabs">
        <button
          className={`tab-button ${activeTab === "help" ? "active" : ""}`}
          onClick={() => setActiveTab("help")}
        >
          <span className="tab-icon">üÜò</span>
          –ü–æ–º–æ—â—å
        </button>
        <button
          className={`tab-button ${activeTab === "faq" ? "active" : ""}`}
          onClick={() => setActiveTab("faq")}
        >
          <span className="tab-icon">‚ùì</span>
          FAQ
        </button>
        <button
          className={`tab-button ${activeTab === "contact" ? "active" : ""}`}
          onClick={() => setActiveTab("contact")}
        >
          <span className="tab-icon">üìû</span>
          –°–≤—è–∑–∞—Ç—å—Å—è
        </button>
        <button
          className={`tab-button ${activeTab === "feedback" ? "active" : ""}`}
          onClick={() => setActiveTab("feedback")}
        >
          <span className="tab-icon">üí¨</span>
          –û—Ç–∑—ã–≤
        </button>
      </div>

      {/* –ö–æ–Ω—Ç–µ–Ω—Ç —Ç–∞–±–æ–≤ */}
      <div className="support-content">
        {/* –ü–æ–º–æ—â—å */}
        {activeTab === "help" && (
          <div className="help-section">
            <h2 className="section-title">–ö–∞–∫ –º—ã –º–æ–∂–µ–º –ø–æ–º–æ—á—å?</h2>
            <div className="help-categories">
              {supportCategories.map((category) => (
                <div
                  key={category.id}
                  className="help-category"
                  onClick={() => {
                    setActiveTab("faq");
                    setSelectedCategory(category.id);
                  }}
                >
                  <div className="category-icon">{category.icon}</div>
                  <div className="category-info">
                    <h3 className="category-title">{category.title}</h3>
                    <p className="category-description">{category.description}</p>
                  </div>
                  <div className="category-arrow">‚Üí</div>
                </div>
              ))}
            </div>

            <div className="quick-help">
              <h3 className="quick-help-title">–ë—ã—Å—Ç—Ä–∞—è –ø–æ–º–æ—â—å</h3>
              <div className="quick-help-items">
                <div className="quick-help-item">
                  <span className="quick-icon">üìû</span>
                  <div className="quick-info">
                    <div className="quick-title">–¢–µ–ª–µ—Ñ–æ–Ω –ø–æ–¥–¥–µ—Ä–∂–∫–∏</div>
                    <div className="quick-subtitle">+7 (800) 123-45-67</div>
                  </div>
                </div>
                <div className="quick-help-item">
                  <span className="quick-icon">üìß</span>
                  <div className="quick-info">
                    <div className="quick-title">Email –ø–æ–¥–¥–µ—Ä–∂–∫–∏</div>
                    <div className="quick-subtitle">support@parkovka.ru</div>
                  </div>
                </div>
                <div className="quick-help-item">
                  <span className="quick-icon">üí¨</span>
                  <div className="quick-info">
                    <div className="quick-title">–û–Ω–ª–∞–π–Ω —á–∞—Ç</div>
                    <div className="quick-subtitle">–î–æ—Å—Ç—É–ø–µ–Ω 24/7</div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        )}

        {/* FAQ */}
        {activeTab === "faq" && (
          <div className="faq-section">
            <div className="faq-header">
              <h2 className="section-title">–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã</h2>
              {selectedCategory && (
                <button
                  className="clear-filter-btn"
                  onClick={() => setSelectedCategory(null)}
                >
                  –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ
                </button>
              )}
            </div>

            <div className="faq-filters">
              {supportCategories.map((category) => (
                <button
                  key={category.id}
                  className={`faq-filter ${selectedCategory === category.id ? "active" : ""}`}
                  onClick={() => setSelectedCategory(category.id)}
                >
                  <span className="filter-icon">{category.icon}</span>
                  {category.title}
                </button>
              ))}
            </div>

            <div className="faq-list">
              {filteredFAQ.map((item) => (
                <div key={item.id} className="faq-item">
                  <div className="faq-question">
                    <span className="question-icon">‚ùì</span>
                    <span className="question-text">{item.question}</span>
                  </div>
                  <div className="faq-answer">
                    <span className="answer-icon">üí°</span>
                    <span className="answer-text">{item.answer}</span>
                  </div>
                </div>
              ))}
            </div>
          </div>
        )}

        {/* –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è —Ñ–æ—Ä–º–∞ */}
        {activeTab === "contact" && (
          <div className="contact-section">
            <h2 className="section-title">–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏</h2>
            
            {submitted ? (
              <div className="success-message">
                <div className="success-icon">‚úÖ</div>
                <h3>–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!</h3>
                <p>–ú—ã –ø–æ–ª—É—á–∏–ª–∏ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –æ—Ç–≤–µ—Ç–∏–º –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤.</p>
                <button
                  className="new-message-btn"
                  onClick={() => setSubmitted(false)}
                >
                  –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                </button>
              </div>
            ) : (
              <form className="contact-form" onSubmit={handleContactSubmit}>
                <div className="form-group">
                  <label className="form-label">–ò–º—è *</label>
                  <input
                    type="text"
                    value={contactForm.name}
                    onChange={(e) => setContactForm({ ...contactForm, name: e.target.value })}
                    className="form-input"
                    placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è"
                    required
                  />
                </div>

                <div className="form-group">
                  <label className="form-label">Email *</label>
                  <input
                    type="email"
                    value={contactForm.email}
                    onChange={(e) => setContactForm({ ...contactForm, email: e.target.value })}
                    className="form-input"
                    placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à email"
                    required
                  />
                </div>

                <div className="form-group">
                  <label className="form-label">–ö–∞—Ç–µ–≥–æ—Ä–∏—è</label>
                  <select
                    value={contactForm.category}
                    onChange={(e) => setContactForm({ ...contactForm, category: e.target.value })}
                    className="form-select"
                  >
                    {supportCategories.map((category) => (
                      <option key={category.id} value={category.id}>
                        {category.title}
                      </option>
                    ))}
                  </select>
                </div>

                <div className="form-group">
                  <label className="form-label">–¢–µ–º–∞ *</label>
                  <input
                    type="text"
                    value={contactForm.subject}
                    onChange={(e) => setContactForm({ ...contactForm, subject: e.target.value })}
                    className="form-input"
                    placeholder="–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã"
                    required
                  />
                </div>

                <div className="form-group">
                  <label className="form-label">–°–æ–æ–±—â–µ–Ω–∏–µ *</label>
                  <textarea
                    value={contactForm.message}
                    onChange={(e) => setContactForm({ ...contactForm, message: e.target.value })}
                    className="form-textarea"
                    placeholder="–ü–æ–¥—Ä–æ–±–Ω–æ –æ–ø–∏—à–∏—Ç–µ –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É –∏–ª–∏ –≤–æ–ø—Ä–æ—Å"
                    rows={5}
                    required
                  />
                </div>

                <button
                  type="submit"
                  className={`submit-button ${loading ? "loading" : ""}`}
                  disabled={loading}
                >
                  {loading ? (
                    <>
                      <div className="loading-spinner"></div>
                      –û—Ç–ø—Ä–∞–≤–∫–∞...
                    </>
                  ) : (
                    "–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ"
                  )}
                </button>
              </form>
            )}
          </div>
        )}

        {/* –§–æ—Ä–º–∞ –æ—Ç–∑—ã–≤–∞ */}
        {activeTab === "feedback" && (
          <div className="feedback-section">
            <h2 className="section-title">–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤</h2>
            
            {submitted ? (
              <div className="success-message">
                <div className="success-icon">‚úÖ</div>
                <h3>–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–∑—ã–≤!</h3>
                <p>–í–∞—à –æ—Ç–∑—ã–≤ –ø–æ–º–æ–∂–µ—Ç –Ω–∞–º —É–ª—É—á—à–∏—Ç—å —Å–µ—Ä–≤–∏—Å.</p>
                <button
                  className="new-feedback-btn"
                  onClick={() => setSubmitted(false)}
                >
                  –û—Å—Ç–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –æ—Ç–∑—ã–≤
                </button>
              </div>
            ) : (
              <form className="feedback-form" onSubmit={handleFeedbackSubmit}>
                <div className="form-group">
                  <label className="form-label">–û—Ü–µ–Ω–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ *</label>
                  <div className="rating-input">
                    {[1, 2, 3, 4, 5].map((star) => (
                      <button
                        key={star}
                        type="button"
                        className={`star-button ${star <= feedbackForm.rating ? "active" : ""}`}
                        onClick={() => setFeedbackForm({ ...feedbackForm, rating: star })}
                      >
                        ‚≠ê
                      </button>
                    ))}
                  </div>
                  <p className="rating-text">
                    {feedbackForm.rating === 0 && "–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ü–µ–Ω–∫—É"}
                    {feedbackForm.rating === 1 && "–û—á–µ–Ω—å –ø–ª–æ—Ö–æ"}
                    {feedbackForm.rating === 2 && "–ü–ª–æ—Ö–æ"}
                    {feedbackForm.rating === 3 && "–ù–æ—Ä–º–∞–ª—å–Ω–æ"}
                    {feedbackForm.rating === 4 && "–•–æ—Ä–æ—à–æ"}
                    {feedbackForm.rating === 5 && "–û—Ç–ª–∏—á–Ω–æ"}
                  </p>
                </div>

                <div className="form-group">
                  <label className="form-label">–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π</label>
                  <textarea
                    value={feedbackForm.comment}
                    onChange={(e) => setFeedbackForm({ ...feedbackForm, comment: e.target.value })}
                    className="form-textarea"
                    placeholder="–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ –≤–∞—à–µ–º –æ–ø—ã—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
                    rows={4}
                  />
                </div>

                <div className="form-group">
                  <label className="form-label">–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ —É–ª—É—á—à–µ–Ω–∏—é</label>
                  <textarea
                    value={feedbackForm.suggestions}
                    onChange={(e) => setFeedbackForm({ ...feedbackForm, suggestions: e.target.value })}
                    className="form-textarea"
                    placeholder="–ß—Ç–æ –±—ã –≤—ã —Ö–æ—Ç–µ–ª–∏ —É–ª—É—á—à–∏—Ç—å –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏?"
                    rows={3}
                  />
                </div>

                <button
                  type="submit"
                  className={`submit-button ${loading ? "loading" : ""}`}
                  disabled={loading || feedbackForm.rating === 0}
                >
                  {loading ? (
                    <>
                      <div className="loading-spinner"></div>
                      –û—Ç–ø—Ä–∞–≤–∫–∞...
                    </>
                  ) : (
                    "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤"
                  )}
                </button>
              </form>
            )}
          </div>
        )}
      </div>
    </div>
  );
}
